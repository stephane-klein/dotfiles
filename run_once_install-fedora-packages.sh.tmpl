#!/bin/sh

{{ if eq .chezmoi.os "linux" }}
{{   if eq .chezmoi.osRelease.id "fedora" }}
# Fedora-specific code

set -e # -e: exit on error

sudo dnf copr enable atim/starship -y
sudo dnf update -y

# Install Docker (see https://docs.docker.com/engine/install/fedora/)
# https://developer.fedoraproject.org/tools/docker/docker-installation.html
# Docker must be installed before distrobox
sudo dnf remove -y podman
sudo dnf config-manager -y --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
sudo dnf install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin iptables fuse-overlayfs docker-compose

sudo dnf install -y \
    flatpak \
    git \
    util-linux-user \
    zsh \
    ripgrep \
    patch \
    lm_sensors \
    hddtemp \
    nvme-cli \
    neofetch \
    ncdu \
    rsync \
    pwgen \
    mc \
    direnv \
    htop \
    alacritty \
    jq \
    dnf-plugins-core \
    ffmpeg-free \
    fzf \
    starship \
    distrobox

sudo dnf copr enable vstanek/gnome-info-collect -y
sudo dnf install gnome-info-collect -y

flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

# sudo are added in this line because https://ask.fedoraproject.org/t/error-flatpak-system-operation-deploy-not-allowed-for-user/32179
sudo flatpak install -y flathub com.bitwarden.desktop
sudo flatpak install -y flathub com.discordapp.Discord
sudo flatpak install -y flathub com.microsoft.Teams
sudo flatpak install -y flathub com.slack.Slack
sudo flatpak install -y flathub com.spotify.Client
sudo flatpak install -y flathub im.riot.Riot
sudo flatpak install -y flathub net.cozic.joplin_desktop
sudo flatpak install -y flathub org.chromium.Chromium
sudo flatpak install -y flathub org.signal.Signal
sudo flatpak install -y flathub org.telegram.desktop
sudo flatpak install -y flathub org.videolan.VLC
sudo flatpak install -y flathub com.github.eneshecan.WhatsAppForLinux

# https://github.com/stephane-klein/dotfiles/issues/67
sudo flatpak override --env=MOZ_ENABLE_WAYLAND=1


# https://docs.docker.com/engine/install/linux-postinstall/
sudo groupadd docker && sudo gpasswd -a ${USER} docker && sudo systemctl restart docker
sudo systemctl enable docker

sudo dnf builddep -y python3

# Install neovim from binary
rm -rf ~/neovim/
mkdir -p ~/neovim/
curl -fsSL "https://github.com/neovim/neovim/releases/download/v0.8.0/nvim-linux64.tar.gz" | tar xz -C ~/neovim/ --strip-components=1

# neovim dependencies: ripgrep
# asdf python dependencies: patch and "dnf builddep python3"

chsh -s $(which zsh)
if ! [ -d ~/.oh-my-zsh ]; then
    CHSH=no sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
fi

if ! [ -d ~/.oh-my-zsh/custom}/plugins/pnpm ]; then
    mkdir -p ~/.oh-my-zsh/custom}/plugins/pnpm
    git clone --depth=1 https://github.com/ntnyq/omz-plugin-pnpm.git ~/.oh-my-zsh/custom/plugins/pnpm
fi

# Install https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/Hack
if ! fc-list | grep "Hack Regular Nerd Font" &> /dev/null; then
    (
        cd ~/
        git clone --filter=blob:none --sparse https://github.com/ryanoasis/nerd-fonts.git ~/nerd-fonts
        cd nerd-fonts
        git sparse-checkout add patched-fonts/Hack
        ./install.sh Hack
        cd ..
        rm -rf nerd-fonts
    )
fi

# Install neovim dependencies
if ! [ -d ~/.local/share/nvim/site/pack/packer/start/packer.nvim ]; then
    git clone --depth 1 https://github.com/wbthomason/packer.nvim\
     ~/.local/share/nvim/site/pack/packer/start/packer.nvim
fi

if ! [ -d ~/.local/share-trial/nvim/site/pack/packer/start/packer.nvim ]; then
# Install neovim dependencies for nvim trial instance
    git clone --depth 1 https://github.com/wbthomason/packer.nvim\
     ~/.local/share-trial/nvim/site/pack/packer/start/packer.nvim
fi

# Install asdf
if ! [ -d ~/.asdf ]; then
    git -c advice.detachedHead=false clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.10.2
fi
. $HOME/.asdf/asdf.sh
asdf update
asdf plugin add nodejs || true
asdf plugin add pnpm  || true
asdf plugin add python  || true
asdf plugin add yarn || true
asdf plugin add golang || true
(
    cd ~/
    asdf install
)

echo "Launch 'source ~/.zshrc' to reload zsh configuration"
echo "User added to docker group, then you need to restart session"

{{   end }}
{{ end }}
